/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.server.domain.forum;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("PostInput")
public class PostInput  {

	public PostInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "topicId", graphQLTypeName = "ID", list = false, javaClass = UUID.class)
	UUID topicId;


	@GraphQLNonScalar(fieldName = "input", graphQLTypeName = "TopicPostInput", list = false, javaClass = TopicPostInput.class)
	TopicPostInput input;


	@GraphQLScalar(fieldName = "from", graphQLTypeName = "Date", list = false, javaClass = Date.class)
	Date from;


	@GraphQLScalar(fieldName = "in", graphQLTypeName = "Date", list = true, javaClass = Date.class)
	List<Date> in;



	public void setTopicId(UUID topicId) {
		this.topicId = topicId;
	}

	public UUID getTopicId() {
		return topicId;
	}

	public void setInput(TopicPostInput input) {
		this.input = input;
	}

	public TopicPostInput getInput() {
		return input;
	}

	public void setFrom(Date from) {
		this.from = from;
	}

	public Date getFrom() {
		return from;
	}

	public void setIn(List<Date> in) {
		this.in = in;
	}

	public List<Date> getIn() {
		return in;
	}

    public String toString() {
        return "PostInput {"
				+ "topicId: " + topicId
				+ ", "
				+ "input: " + input
				+ ", "
				+ "from: " + from
				+ ", "
				+ "in: " + in
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		TopicId("topicId"),
		Input("input"),
		From("from"),
		In("in");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private UUID topicId;
		private TopicPostInput input;
		private Date from;
		private List<Date> in;


		public Builder withTopicId(UUID topicId) {
			this.topicId = topicId;
			return this;
		}
		public Builder withInput(TopicPostInput input) {
			this.input = input;
			return this;
		}
		public Builder withFrom(Date from) {
			this.from = from;
			return this;
		}
		public Builder withIn(List<Date> in) {
			this.in = in;
			return this;
		}

		public PostInput build() {
			PostInput _object = new PostInput();
			_object.setTopicId(topicId);
			_object.setInput(input);
			_object.setFrom(from);
			_object.setIn(in);
			return _object;
		}
	}
}

/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.server.domain.forum;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("SubscriptionType")
public class SubscriptionType  {

	public SubscriptionType(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "subscribeToNewPost", graphQLTypeName = "Post", list = false, javaClass = Post.class)
	Post subscribeToNewPost;



	public void setSubscribeToNewPost(Post subscribeToNewPost) {
		this.subscribeToNewPost = subscribeToNewPost;
	}

	public Post getSubscribeToNewPost() {
		return subscribeToNewPost;
	}

    public String toString() {
        return "SubscriptionType {"
				+ "subscribeToNewPost: " + subscribeToNewPost
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		SubscribeToNewPost("subscribeToNewPost");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Post subscribeToNewPost;


		public Builder withSubscribeToNewPost(Post subscribeToNewPost) {
			this.subscribeToNewPost = subscribeToNewPost;
			return this;
		}

		public SubscriptionType build() {
			SubscriptionType _object = new SubscriptionType();
			_object.setSubscribeToNewPost(subscribeToNewPost);
			return _object;
		}
	}
}

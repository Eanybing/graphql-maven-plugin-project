/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.server.domain.forum;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.UUID;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("TopicInput")
public class TopicInput  {

	public TopicInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "boardId", graphQLTypeName = "ID", list = false, javaClass = UUID.class)
	UUID boardId;


	@GraphQLNonScalar(fieldName = "input", graphQLTypeName = "TopicPostInput", list = false, javaClass = TopicPostInput.class)
	TopicPostInput input;



	public void setBoardId(UUID boardId) {
		this.boardId = boardId;
	}

	public UUID getBoardId() {
		return boardId;
	}

	public void setInput(TopicPostInput input) {
		this.input = input;
	}

	public TopicPostInput getInput() {
		return input;
	}

    public String toString() {
        return "TopicInput {"
				+ "boardId: " + boardId
				+ ", "
				+ "input: " + input
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		BoardId("boardId"),
		Input("input");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private UUID boardId;
		private TopicPostInput input;


		public Builder withBoardId(UUID boardId) {
			this.boardId = boardId;
			return this;
		}
		public Builder withInput(TopicPostInput input) {
			this.input = input;
			return this;
		}

		public TopicInput build() {
			TopicInput _object = new TopicInput();
			_object.setBoardId(boardId);
			_object.setInput(input);
			return _object;
		}
	}
}

/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.samples.forum.server;

import org.reactivestreams.Publisher;

import com.graphql_java_generator.samples.forum.server.Post;

import graphql.schema.DataFetchingEnvironment;

/**
 * @author generated by graphql-java-generator
 * @see <a href=
 *      "https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
public interface DataFetchersDelegateSubscriptionType {

	// Below is a copy of the DataFetcher declaration, in the GraphQLDataFetchers class
	// public DataFetcher<Publisher<Post>> dataFetchersDelegateSubscriptionSubscribeToNewPost() {
	// return dataFetchingEnvironment -> {
	// String boardName = dataFetchingEnvironment.getArgument("boardName");
	//
	// Publisher<Post> ret = dataFetchersDelegateSubscriptionType.subscribeToNewPost(dataFetchingEnvironment,
	// boardName);
	// logger.debug("subscribed to subscribeToNewPost for board '{}'", boardName);
	//
	// return ret;
	// };
	// }

	public Publisher<Post> subscribeToNewPost(DataFetchingEnvironment dataFetchingEnvironment, String boardName);

}
